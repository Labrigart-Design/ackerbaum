{%- comment -%}
  ----------------------------------------------------------------------------------------------------------------------
  VARIANT PICKER
  ----------------------------------------------------------------------------------------------------------------------

  Render the variant picker option selectors.

  ********************************************
  Supported variables
  ********************************************

  * product: the product for which to render the selector (required)
  * update_url: if set to true, the URL is updated when the variant changes (usually used for product page)
  * hide_sold_out_variants: if set to true, the sold out or unavailable variants are hidden
  * hide_size_chart: if set to true, size chart is always hidden
  * force_dropdown_as_block: if set to true, the dropdown selectors are replaced by blocks, which is useful for quick buy where dropdown are not convenient to use
  * form_id: the ID of the form that is listening
  * block: the block itself, for theme-specific options (such as selector types)
{%- endcomment -%}

{%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}
{%- assign size_label_list = 'general.label.size' | t | replace: ', ', ',' | downcase | split: ',' -%}

{%- unless product.has_only_default_variant or hide_sold_out_variants and product.available == false -%}
  <variant-picker
    class="variant-picker"
    handle="{{ product.handle }}"
    form="{{ form_id }}"
    {% if update_url %}
      update-url
    {% endif %}
    {% if hide_sold_out_variants %}
      hide-sold-out-variants
    {% endif %}
  >
    {% assign available_variants_count = 0 %}
    {% for variant in product.variants %}
      {% if variant.available %}
        {% assign available_variants_count = available_variants_count | plus: 1 %}
      {% endif %}
    {% endfor %}

    <div class="select-wrapper">
      <div class="select-header">Lieferform:</div>
      <select
        name="id"
        id="ProductSelect-{{ product.id }}"
        class="product-single__variants {% if  available_variants_count <= 1  %}select-disabled{% endif %}"
        form="{{ form_id }}"
        {% if available_variants_count <= 1 %}
          style="pointer-events: none;"
        {% endif %}
        aria-label="Lieferform"
      >
        {% for variant in product.variants %}
          {% if variant.available %}
            <option value="{{ variant.id }}">{{ variant.title }}</option>
          {% endif %}
        {% endfor %}
      </select>
      {% if available_variants_count > 1 %}
        <div class="select-chevron-wrapper">
          <svg width="8" height="6" class="icon icon-chevron-bottom-small" viewBox="0 0 8 6">
            <path d="m1 1.5 3 3 3-3" fill="none" stroke="currentColor" stroke-width="1.5"></path>
          </svg>
        </div>
      {% endif %}
    </div>

    <style>
        .select-disabled {
        pointer-events: none;
      }

      .variant-picker__option{
        display: none;
      }

      .select-wrapper {
        position: relative;
        max-width: 400px;
        display: block;
        width: 100%;
        border: 1px solid #2c6d0a;  
        border-radius: 50px;
        padding: var(--spacing-1) var(--spacing-1); /* Innenabstand anpassen, sodass das Label Platz hat */
        background-color: white;
        font-size: var(--text-base);
        color: #311d0f;
      }

      .select-header {
        position: absolute;
        top: 10px; /* Abstand von der oberen Kante des select-wrapper */
        left: 20px; /* Abstand von der linken Kante des select-wrapper */
        background: transparent; /* Hintergrundfarbe des Labels, um den Hintergrund des select-wrapper zu überdecken */
        margin: 0; /* Keine Außenabstände */
        font-weight: 400; /* Stil des Textes */
          font-size: 14px;
        font-family: SofiaProSemiBold !important; 
      }

      .product-single__variants {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        width: calc(100%); /* Breite anpassen, um den Platz für das Label zu berücksichtigen */
        padding: var(--spacing-2) var(--spacing-4) var(--spacing-1) var(--spacing-4); /* Innenabstand anpassen */
        border: none; /* Keine Ränder, da diese im .select-wrapper definiert sind */
        margin-top: 18px; /* Abstand nach oben, um Platz für das Label zu schaffen */
        position: relative; /* Für die Positionierung des Chevron */
        cursor: pointer;
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 20px 20px; 
        background-color: transparent;
        color: #311d0f!important;
      }

      /* Stil für das Pseudo-Element ::-ms-expand für Internet Explorer und Edge */
      .product-single__variants::-ms-expand {
        display: none;
      }

      /* Stil für das Hover-Verhalten */
      .product-single__variants:hover {
        border-color: rgb(var(--text-color) / .5); /* Dunklere Randfarbe beim Hover */
      }

        .select-chevron-wrapper {
        position: absolute;
        top: 50%;
        right: 18px;
        transform: translateY(-50%) rotate(0deg);
        pointer-events: none; /* Ermöglicht Klicks auf das darunterliegende <select> */
      }

      /* Chevron-Drehung bei <select>:focus oder <select>:active */
      .select-wrapper select:focus + .select-chevron-wrapper svg,
      .select-wrapper select:active + .select-chevron-wrapper svg {
        transform: translateY(-50%) rotate(0deg);
      }

      .select-chevron-wrapper svg {
        width: 18px;
        height: 18px;
        transition: transform 0.3s ease; /* Glättet die Drehung über 0.3 Sekunden */
      }

      .product-single__variants:focus {
        outline: none; /* Entfernt die Umrandung komplett */
      }
    </style>

    <script>
            document.addEventListener('DOMContentLoaded', function() {
          const selectElement = document.getElementById('ProductSelect-{{ product.id }}');
          const chevron = document.querySelector('.select-chevron-wrapper svg');

          // Event-Listener für das Öffnen des Dropdowns (Fokus)
          selectElement.addEventListener('focus', function() {
              chevron.style.transform = 'rotate(180deg)';
          });

          // Event-Listener für das Schließen des Dropdowns (Blur)
          selectElement.addEventListener('blur', function() {
              chevron.style.transform = 'rotate(0deg)';
          });

          // Auswahl im Dropdown-Menü basierend auf der Varianten-ID in der URL setzen
          selectVariantFromUrl();

          // Hauptfunktionalität: URL aktualisieren und Seite neu laden, wenn eine Variante ausgewählt wird
          selectElement.addEventListener('change', function() {
              const variantId = this.value;
              updateUrlAndReloadPageIfNeeded(variantId);
          });
      });

      function updateUrlAndReloadPageIfNeeded(variantId) {
          const currentUrl = new URL(window.location.href);
          const currentVariantId = currentUrl.searchParams.get('variant');

          // Nur neu laden, wenn die Varianten-ID sich ändert
          if (currentVariantId !== variantId) {
              currentUrl.searchParams.set('variant', variantId);
              window.location.href = currentUrl.href; // Aktualisiert die URL und lädt die Seite neu
          }
      }

      function selectVariantFromUrl() {
          const urlParams = new URLSearchParams(window.location.search);
          const variantId = urlParams.get('variant');
          const selectElement = document.getElementById('ProductSelect-{{ product.id }}');

          if (variantId && selectElement && selectElement.value !== variantId) {
              selectElement.value = variantId;
          }
      }
    </script>

    {%- for option in product.options_with_values -%}
      {%- assign option_downcase = option.name | downcase -%}
      {%- assign selector_type = block.settings.selector_mode -%}

      {% if color_label_list contains option_downcase %}
        {%- assign selector_type = block.settings.color_mode -%}

        {%- if selector_type == 'variant_image' -%}
          {%- comment -%}To use this mode every variant must have an attached media{%- endcomment -%}

          {%- for variant in product.variants -%}
            {%- unless variant.featured_media -%}
              {%- assign selector_type = 'color' -%}
              {%- break -%}
            {%- endunless -%}
          {%- endfor -%}
        {%- endif -%}
      {%- endif -%}

      {%- if selector_type == 'dropdown' and force_dropdown_as_block -%}
        {%- assign selector_type = 'block' -%}
      {%- endif -%}

      <fieldset class="variant-picker__option no-js:hidden">
        <div class="variant-picker__option-info">
          <div class="h-stack gap-2">
            <legend class="text-subdued">{{ option.name }}:</legend>
            <variant-option-value form="{{ form_id }}" for="option{{ option.position }}">
              {{- option.selected_value -}}
            </variant-option-value>
          </div>

          {%- if hide_size_chart != true
            and block.settings.size_chart_page != blank
            and size_label_list contains option_downcase
          -%}
            {%- capture drawer_id -%}size-chart-{{ section.id }}-{{ block.id }}{%- endcapture -%}

            <button
              type="button"
              class="text-sm text-subdued"
              aria-controls="{{ drawer_id | escape }}"
              aria-expanded="false"
            >
              <span class="link">{{ 'product.general.size_chart' | t }}</span>
            </button>

            <x-drawer id="{{ drawer_id }}" class="drawer drawer--lg">
              <span class="h5" slot="header">{{ block.settings.size_chart_page.title }}</span>

              <div class="prose">
                {{- block.settings.size_chart_page.content -}}
              </div>
            </x-drawer>
          {%- endif -%}
        </div>

        {%- if selector_type != 'dropdown' -%}
          <div
            {% unless block.settings.stack_blocks %}
              class="scroll-area bleed sm:unbleed"
            {% endunless %}
          >
            <div
              data-option-selector
              class="variant-picker__option-values {% if block.settings.stack_blocks %}wrap{% else %}scroll-area bleed sm:unbleed{% endif %} {% if selector_type == 'color' and settings.color_swatch_style == 'rectangle' %}variant-picker__option-values--color gap-4{% else %}gap-2{% endif %}"
            >
              {%- assign name = 'option' | append: option.position -%}

              {%- for value in option.values -%}
                {%- assign selected = false -%}

                {%- if value == option.selected_value -%}
                  {%- assign selected = true -%}
                {%- endif -%}

                {%- case selector_type -%}
                  {%- when 'variant' -%}
                    {%- assign variant_for_value = product.variants | where: name, value | first -%}
                    {%- render 'swatch' with 'media',
                      value: value,
                      media: variant_for_value.featured_media,
                      selected: selected,
                      name: name,
                      form: form_id,
                      bordered: true
                    -%}
                  {%- when 'color' -%}
                    {%- render 'swatch' with 'color', value: value, selected: selected, name: name, form: form_id -%}
                  {%- when 'block' -%}
                    {%- render 'swatch' with 'block', value: value, selected: selected, name: name, form: form_id -%}
                  {%- when 'block_swatch' -%}
                    {%- render 'swatch' with 'block',
                      value: value,
                      selected: selected,
                      name: name,
                      form: form_id,
                      show_color: true
                    -%}
                {%- endcase -%}
              {%- endfor -%}
            </div>
          </div>
        {%- endif -%}
      </fieldset>
    {%- endfor -%}

    <noscript>
      {%- capture input_label -%}{{ 'product.general.variant' | t }}{%- endcapture -%}
      {%- capture select_options -%}
        {%- for variant in product.variants -%}
          <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
        {%- endfor -%}
      {%- endcapture -%}

      {%- render 'select', label: input_label, form: form_id, name: 'id', options: select_options -%}
    </noscript>
  </variant-picker>
{%- else -%}
  <noscript>
    <input type="hidden" name="id" form="{{ form_id }}" value="{{ product.selected_or_first_available_variant.id }}">
  </noscript>
{%- endunless -%}
