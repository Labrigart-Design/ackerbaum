{%- if section.blocks.size > 0 -%}
  {%- comment -%}
    ------------------------------------------------------------------------------------------------------------------------
    CSS
    ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}
  <style>
    :root {
      --sticky-announcement-bar-enabled: {%- if section.settings.enable_sticky -%}1{% else %}0{% endif %};
    }

    {%- if section.settings.enable_sticky -%}
      #shopify-section-{{ section.id }} {
        position: sticky;
        top: 0;
        z-index: 20;
      }

      .shopify-section--header ~ #shopify-section-{{ section.id }} {
        top: calc(var(--sticky-header-enabled, 0) * var(--header-height, 0px));
      }
    {%- endif -%}
  </style>

  {%- comment -%}
    ------------------------------------------------------------------------------------------------------------------------
    LIQUID
    ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <style>
    .announcement-bar-desktop {
      display: flex;
      justify-content: space-between;
      align-items: center; /* Zentriert die Elemente vertikal */
      background-color: #2f6e2e; /* Hintergrundfarbe der Bar */
      padding: 10px; /* Abstand innen */
      color: #f3f0ec;
    }

    .announcement-item,
    .announcement-item-desktop {
      display: flex;
      align-items: center;
    }

    .announcement-image {
        width: 100%; /* Stellt sicher, dass das Bild sich innerhalb der Breitengrenzen anpasst */
        max-height: 50px; /* Maximale Höhe des Bildes */
        height: auto; /* Erhalte das Seitenverhältnis des Bildes */
        object-fit: contain; /* Stellt sicher, dass das Bild innerhalb der Grenzen bleibt, ohne verzerrt zu werden */
        padding-bottom: 3px;
        padding-right: 5px;
    }

    @media (min-width: 786px) {
      .announcement-bar {
        display: none;
      }
    }

    @media (max-width: 787px) {
      .announcement-bar-desktop {
        display: none;
      }

      /* Setzt die Sichtbarkeit aller announcement-item Elemente auf hidden */
      .announcement-item {
        visibility: hidden;
      }

      /* Setzt die Sichtbarkeit des ersten announcement-item Elements auf visible */
      .announcement-item:first-of-type {
        visibility: visible;
      }
    }

    .announcement-item-desktop:first-child {
      padding-left: 90px; /* Padding für das erste Element */
    }
    .announcement-item-desktop:last-child {
      padding-right: 90px; /* Padding für das letzte Element */
    }
  </style>

  <height-observer variable="announcement-bar">
    <div class="announcement-bar-desktop">
      {%- for block in section.blocks -%}
        <div class="announcement-item-desktop">
          {%- if block.settings.image != blank -%}
            <img
              src="{{ block.settings.image | img_url: '300x' }}"
              alt=""
              class="announcement-image"
              width="50"
              height="50"
              style="max-width: {{ block.settings.image_max_width }}px;"
            >
          {%- endif -%}
          <p
            class="bold {{ section.settings.text_size }}"
            {{ block.shopify_attributes }}
          >
            {%- if block.settings.url != blank -%}
              <a href="{{ block.settings.url }}">{{ block.settings.text | escape }}</a>
            {%- else -%}
              {{ block.settings.text | escape }}
            {%- endif -%}
          </p>
        </div>
      {%- endfor -%}
    </div>
    <div
      {% render 'surface',
        class: 'announcement-bar',
        background_gradient: section.settings.background_gradient,
        background: section.settings.background,
        text_color: section.settings.text_color
      %}
    >
      {%- if section.settings.navigation_mode == 'scrolling' -%}
        <marquee-text scrolling-speed="{{ section.settings.scrolling_speed }}" class="announcement-bar__scrolling-list">
          {%- capture content -%}
              {%- for block in section.blocks -%}
                <p class="bold {{ section.settings.text_size }}" {{ block.shopify_attributes }}>
                  {%- if block.settings.url != blank -%}
                    <a href="{{ block.settings.url }}">{{ block.settings.text | escape }}</a>
                  {%- else -%}
                    {{ block.settings.text | escape }}
                  {%- endif -%}
                </p>
  
                <span class="shape-circle shape--sm"></span>
              {%- endfor -%}
            {%- endcapture -%}

          {%- for i in (1..10) -%}
            <span
              class="announcement-bar__item"
              {% unless forloop.first %}
                aria-hidden="true"
              {% endunless %}
            >
              {{- content -}}
            </span>
          {%- endfor -%}
        </marquee-text>
      {%- else -%}
        <div class="container">
          <div class="announcement-bar__wrapper {% if section.blocks.size == 1 %}justify-center{% else %}justify-between{% endif %}">
            {%- if section.blocks.size > 1 -%}
              <button
                class="tap-area"
                is="prev-button"
                aria-controls="announcement-bar"
                aria-label="{{ 'general.accessibility.previous' | t }}"
              >
                {%- render 'icon' with 'chevron-left', direction_aware: true -%}
              </button>
            {%- endif -%}

            <announcement-bar swipeable id="announcement-bar" class="announcement-bar__static-list">
              {%- for block in section.blocks -%}
                <div class="announcement-item">
                  {%- if block.settings.image != blank -%}
                    <img
                      src="{{ block.settings.image | img_url: '300x' }}"
                      alt=""
                      class="announcement-image"
                      style="padding-bottom: 5px; max-width: {{ block.settings.image_max_width }}px;" width="{{ block.settings.image_max_width }}" height="50"
                    >
                  {%- endif -%}
                  <p class="bold {{ section.settings.text_size }}" {{ block.shopify_attributes }}>
                    {%- if block.settings.url != blank -%}
                      <a href="{{ block.settings.url }}">{{ block.settings.text | escape }}</a>
                    {%- else -%}
                      {{ block.settings.text | escape }}
                    {%- endif -%}
                  </p>
                </div>
              {%- endfor -%}
            </announcement-bar>

           <script>
              setInterval(() => {
                const button = document.getElementById('naechste_message');
                const drawers = document.querySelectorAll('.drawer');
            
                let isAnyDrawerOpen = false;
            
                drawers.forEach(drawer => {
                  if (drawer.classList.contains('show-close-cursor')) {
                    isAnyDrawerOpen = true;
                  }
                });
            
                if (button && !isAnyDrawerOpen) {
                  button.click();
                }
              }, 5000);
            </script>

            {%- if section.blocks.size > 1 -%}
              <button
                class="tap-area"
                is="next-button"
                id="naechste_message"
                aria-controls="announcement-bar"
                aria-label="{{ 'general.accessibility.next' | t }}"
              >
                {%- render 'icon' with 'chevron-right', direction_aware: true -%}
              </button>
            {%- endif -%}
          </div>
        </div>
      {%- endif -%}
    </div>
  </height-observer>

  <script>
    document.documentElement.style.setProperty(
      '--announcement-bar-height',
      Math.round(document.getElementById('shopify-section-{{ section.id }}').clientHeight) + 'px'
    );
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "class": "shopify-section--announcement-bar",
  "tag": "aside",
  "max_blocks": 5,
  "blocks": [
    {
      "type": "message",
      "name": "Message",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Announce something here"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "number",
          "id": "image_max_width",
          "label": "Image Max Width (px)",
          "default": 75
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky bar",
      "default": false
    },
    {
      "type": "select",
      "id": "text_size",
      "label": "Text size",
      "options": [
        {
          "value": "text-xxs",
          "label": "X-Small"
        },
        {
          "value": "text-xs",
          "label": "Small"
        },
        {
          "value": "text-base",
          "label": "Medium"
        },
        {
          "value": "text-lg",
          "label": "Large"
        }
      ],
      "default": "text-xs"
    },
    {
      "type": "select",
      "id": "navigation_mode",
      "label": "Multiple message navigation",
      "options": [
        {
          "value": "arrows",
          "label": "Arrows"
        },
        {
          "value": "scrolling",
          "label": "Auto-scrolling"
        }
      ],
      "default": "arrows"
    },
    {
      "type": "range",
      "id": "scrolling_speed",
      "label": "Scrolling speed",
      "min": 10,
      "max": 30,
      "unit": "s",
      "default": 20
    },
    {
      "type": "header",
      "content": "Colors",
      "info": "Gradient replaces solid colors when set."
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text"
    }
  ]
}
{% endschema %}
